# vLEI full chain Docker Compose file with all needed services
# - demo witnesses configured to use host.docker.internal
# - keria configured to use the demo witnesses
# - vLEI server for credential schema caching

# x-keri11-image: &keri11-image
#     image: kentbull/keri:1.1.27a
# x-keri12-image: &keri12-image
#     image: kentbull/keri:1.2.1a

# Witness Images
x-gar-witness-image: &gar-witness-image
  image: weboftrust/keri:1.1.32
x-qar-witness-image: &qar-witness-image
  image: weboftrust/keri:1.1.32
x-person-witness-image: &person-witness-image
  image: weboftrust/keri:1.1.32
x-sally-witness-image: &sally-witness-image
  image: weboftrust/keri:1.1.32

x-keria-image: &keria-image
  image: weboftrust/keria:0.2.0-rc2
x-vlei-image: &vlei-image
  image: gleif/vlei:0.2.0
x-sally-image: &sally-image
  image: kentbull/sally:0.10.0

x-healthcheck: &healthcheck
  interval: 15s
  timeout: 5s
  retries: 3
  start_period: 2s
x-witness-env: &witness-env
  PYTHONUNBUFFERED: 1 # Ensure output is logged in real-time
  PYTHONIOENCODING: UTF-8 # Ensure consistent logging encoding
  PYTHONWARNINGS: ignore::SyntaxWarning # Ignore regular expression syntax warning

networks:
  default:
    external: true
    name: vlei

services:
  # vLEI schema caching server
  vlei-server:
    <<: *vlei-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning
    command: [ 'vLEI-server', '-s', './schema/acdc', '-c', './schema/acdc', '-o', './samples/oobis' ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:7723/oobi/EBfdlu8R27Fbx-ehrqwImnK-8Cm79sqbAQ4MmvEAYqao" ]
      <<: *healthcheck
    ports:
      - "7723:7723"

  # GARs use one of the six demo witnesses, wan
  gar-witnesses:
    <<: *gar-witness-image
    environment:
      <<: *witness-env
    healthcheck:
      test: curl -f http://127.0.0.1:5642/oobi
      <<: *healthcheck
    command: witness demo
    volumes:
      - ./config/gar-witnesses:/keripy/scripts/keri/cf/main
    ports:
      - "5642:5642" # witness named wan
    depends_on:
      vlei-server:
        condition: service_healthy

  # GARs use one of the six demo witnesses, wan
  qar-witnesses:
    <<: *qar-witness-image
    environment:
      <<: *witness-env
    healthcheck:
      test: curl -f http://127.0.0.1:5643/oobi
      <<: *healthcheck
    command: witness demo
    volumes:
      - ./config/qar-witnesses:/keripy/scripts/keri/cf/main
    ports:
      - "5643:5643" # witness named wil
    depends_on:
      vlei-server:
        condition: service_healthy

  # GARs use one of the six demo witnesses, wan
  person-witnesses:
    <<: *person-witness-image
    environment:
      <<: *witness-env
    healthcheck:
      test: curl -f http://127.0.0.1:5644/oobi
      <<: *healthcheck
    command: witness demo
    volumes:
      - ./config/person-witnesses:/keripy/scripts/keri/cf/main
    ports:
      - "5644:5644" # witness named wes
    depends_on:
      vlei-server:
        condition: service_healthy

  # GARs use one of the six demo witnesses, wan
  sally-witnesses:
    <<: *sally-witness-image
    environment:
      <<: *witness-env
    healthcheck:
      test: curl -f http://127.0.0.1:5645/oobi
      <<: *healthcheck
    command: witness demo
    volumes:
      - ./config/sally-witnesses:/keripy/scripts/keri/cf/main
    ports:
      - "5645:5645" # witness named wit
    depends_on:
      vlei-server:
        condition: service_healthy

  keria:
    <<: *keria-image
    environment:
      - KERI_AGENT_CORS=True # Enable CORS for the KERI agent
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning
    volumes:
      - ./config/keria/keria-qvi-witnesses-docker.json:/keria/config/keri/cf/keria.json
    command: --config-dir /keria/config --config-file keria --name agent --loglevel INFO
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:3902/spec.yaml" ]
      <<: *healthcheck
    ports:
      - "3901:3901"
      - "3902:3902"
      - "3903:3903"
    entrypoint: [ 'keria', 'start', '--config-dir', '/keria/config', '--config-file', 'keria', '--name', 'agent', '--loglevel', 'INFO' ]
    depends_on:
      vlei-server:
        condition: service_healthy
      qar-witnesses:
        condition: service_healthy
      person-witnesses:
        condition: service_healthy

  # Sample Webhook that will receive IPEX credential presentation bodies as JSON from Sally
  hook:
    <<: *sally-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning
    # volumes:
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:9923/health" ]
      <<: *healthcheck
    ports:
      - 9923:9923
    entrypoint: [ 'sally', 'hook', 'demo' ]

  # The reporting endpoint service receiving IPEX credential presentations
  sally:
    <<: *sally-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - SALLY=${SALLY}
      - SALLY_SALT=${SALLY_SALT}
      - SALLY_PASSCODE=${SALLY_PASSCODE}
      - WEBHOOK_HOST=${WEBHOOK_HOST}
      - GEDA_PRE=${GEDA_PRE}
      - PYTHONWARNINGS=ignore::SyntaxWarning
    volumes:
      - ./sally/keri/cf/sally-habery-docker.json:/sally/conf/keri/cf/sally-habery.json
      - ./sally/sally-incept.json:/sally/conf/sally-incept.json
      - ./sally/entry-point.sh:/sally/entry-point.sh
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:9723/health" ]
      <<: *healthcheck
    ports:
      - 9723:9723
    entrypoint: "/sally/entry-point.sh"
    depends_on:
      hook:
        condition: service_healthy
      vlei-server:
        condition: service_healthy
      sally-witnesses:
        condition: service_healthy
